<!DOCTYPE HTML>
<html>
<head>
<title>Phaser.io shmup engine</title>
<meta charset='utf-8'>
<meta http-equiv="X-UA-Compatible" content="chrome=1">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style"
	content="black-translucent">
<meta name="description" content="HTML5 shmup game engine">
<meta name="keywords"
	content="shmup, STG, doujin, html5, shoot em up, shooter, vertical, 2d, arcade, scrolling, scroller, bullet, Phaserio">
<!-- viewport user-scalable=no forbids pinch-zooming, which conflicts with the game ! -->
<meta name="viewport"
	content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link href="css/main.css" rel="stylesheet" type="text/css" />
</head>
<body>
	<div style="display: none;">
		<h1>HTML5 shmup game engine</h1>
		<p>A classic shmup game built using HTML5 with Phaser.io.</p>
	</div>
	<div id="game-header">
		<div id="game-lives"></div>
		<div id="game-chain"></div>
		<div id="game-combos">COMBOS</div>
		<div id="game-score"></div>
		<div id="game-highscore"></div>
		<div id="game-paused">---</div>
		<div id="game-fps">NA</div>
		<div id="game-fps-min"></div>
		<div id="game-current-line"></div>
		<div id="game-current-line-debug"></div>
		<div id="game-current-progress-debug"></div>
		<div id="game-current-speedy-debug"></div>
		<div id="game-gamepad-supported">---</div>
		<div>
			<a id="reloadLevel" href="#"
				onclick="stg.game.loadLevel('level1'); return false;">LEVEL1</a>
		</div>
		<div>
			<a id="reloadLevel" href="#"
				onclick="stg.game.loadLevel('sandbox'); return false;">SANDBOX</a>
		</div>
		<div style="margin-top: 2em;">
			<a href="#" onclick="stg.goFullScreen(); return false;">FULLSCREEN</a>
		</div>
	</div>
	<div id="scanlines"></div>
	<div id="gameDiv" class="noselect">
		<!-- Canvas will be injected here by Phaser.io -->
	</div>

	<script src="js/custom/normalizer.js"></script>
	<script src="js/external/phaser.min.js"></script>
	<!-- 	<script src="js/external/powerarray.js"></script> -->
	<script src="js/custom/level-loader.js"></script>
	<script src="js/custom/boot.js"></script>
	<script src="js/custom/preloader.js"></script>
	<script src="js/custom/main-menu.js"></script>
	<script src="js/custom/game.js"></script>
	<script src="js/custom/enemy-factory.js"></script>
	<script src="js/custom/weapon-factory.js"></script>
	<script src="js/custom/player.js"></script>

	<script type="text/javascript">
    window.onload = function() {
      "use strict";
      try {
        var renderAuto = false; // False will force canvas renderer.

        // Create your Phaser game and inject it into the gameContainer div.
        // We did it in a window.onload event, but you can do it anywhere (requireJS load, anonymous function, jQuery dom ready, - whatever floats your boat)
        var game = new Phaser.Game(240, 320, renderAuto ? Phaser.AUTO : Phaser.CANVAS, 'gameDiv');

        // Add the States your game has.
        // You don't have to do this in the html, it could be done in your Boot state too, but for simplicity I'll keep it here.
        game.state.add('Boot', stg.Boot);
        game.state.add('Preloader', stg.Preloader);
        game.state.add('MainMenu', stg.MainMenu);
        game.state.add('Game', stg.Game);

        game.loadImageIntoCache = function(key, imgUrl) {
          var file = {
            type : 'image',
            key : key,
            url : imgUrl,
            data : null,
            error : false,
            loaded : false
          };

          file.data = new Image();
          file.data.name = file.key;

          file.data.onload = function() {
            file.loaded = true;
            this.cache.addImage(file.key, file.url, file.data);
          };

          file.data.onerror = function() {
            file.error = true;
          };

          file.data.crossOrigin = '';
          file.data.src = file.url;
        };

        game.state.start('Boot');
      } catch (e) {
        console.error(e);
        if (e.stack) {
          console.error(e.stack);
        }
      }
    };
  </script>

</body>
</html>
